<ls:UIWidget x:Name="MakeCamp"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=Code"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"

             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             ls:UIWidget.UseCustomDC="True"
             ls:UIWidget.ContextName="MakeCamp"
             d:DesignHeight="2160" d:DesignWidth="3840"
			 ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}">


    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Core;component/Library/MakeCampLib.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="ItemIcon" DataType="ls:VMCampInventorySlot">
                <Grid ToolTipService.Placement="Top" x:Name="CampSupplyItem">
					<Grid.ToolTip>
						<ls:LSTooltip IsHitTestVisible="False" Content="{Binding DataContext.Object, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
					</Grid.ToolTip>
                    <Grid >
                        <ls:LSEntityObject x:Name="Entity" Context="CampSupplies" EntityRef="{Binding Object.EntityHandle}" Background="{Binding Object.Icon}" Width="{StaticResource ContItemIconSize}" Height="{StaticResource ContItemIconSize}">
                            <Image Style="{StaticResource InventoryWaresCellItemImageStyle}" DataContext="{Binding Object}"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                <Label x:Name="SelectionCount" Style="{StaticResource InventoryCellLabelStyle}" Content="{Binding SelectedAmount, Converter={StaticResource AbbreviateNumberConverter}}" Visibility="Collapsed"/>
                                <Label x:Name="SelectionCountSeparator" Style="{StaticResource InventoryCellLabelStyle}" Content="{Binding Source=hd64bfe4cgadadg4468g8b0ag70330ffc717c, Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Visibility, ElementName=SelectionCount}"/>
                                <Label x:Name="ObjectCount" Style="{StaticResource InventoryCellLabelStyle}" DataContext="{Binding Object}"/>
                            </StackPanel>
                        </ls:LSEntityObject>
                        <Image x:Name="SelectedImg" Source="{StaticResource InvSlot_Selector}" IsHitTestVisible="False" Visibility="Hidden" Opacity="0.5"/>
                    </Grid>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseEnter">
                            <ls:LSPlaySound Sound="UI_Shared_Hover"/>
                        </b:EventTrigger>
                        <b:EventTrigger EventName="MouseLeftButtonUp">
                            <ls:LSPlaySound Sound="UI_HUD_MakeCamp_ItemSelect"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding SelectedAmount, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                        <Setter TargetName="SelectionCount" Property="Visibility" Value="{Binding Visibility, ElementName=ObjectCount}"/>
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="True" SourceName="Entity">
                        <Setter TargetName="SelectedImg" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                        <Setter TargetName="SelectedImg" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="SelectedImg" Property="Opacity" Value="1"/>
                        <Setter TargetName="SelectionCount" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="ObjectCount" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </ls:UIWidget.Resources>

    <Grid Background="Transparent" x:Name="root" Visibility="{Binding IsInitiator, Converter={StaticResource BoolToVisibleConverter}}">
        <b:Interaction.Triggers>
            <b:EventTrigger EventName="Loaded">
                <ls:LSPlaySound Sound="UI_HUD_MakeCamp_Open"/>
                <!-- Tutorial UI Event - Camp Supplies -->
                <b:InvokeCommandAction Command="{Binding TutorialEvent}" CommandParameter="586ce1fc-4254-4439-a545-c5393b273825"/>
            </b:EventTrigger>
            <b:EventTrigger EventName="Unloaded">
                <ls:LSPlaySound Sound="UI_HUD_MakeCamp_Close"/>
            </b:EventTrigger>
            <b:DataTrigger Binding="{Binding Tag, ElementName=root}" Value="True">
                <ls:LSPlaySound Sound="UI_HUD_CampSuppliesFill_Completed"/>
            </b:DataTrigger>
        </b:Interaction.Triggers>
        <Grid.Tag>
            <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                <Binding Path="SelectedSuppliesAmount"/>
                <Binding Path="CurrentPlayer.RequiredPartySupplies"/>
            </MultiBinding>
        </Grid.Tag>

        <Control Template="{DynamicResource SoundEventsTemplate}"/>

        <Grid x:Name="PanelHolder">

            <!-- Background of the whole window-->
            <Image Source="pack://application:,,,/Core;component/Assets/MakeCamp/campSupplies_bg.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Top"/>

            <ls:LSButton Style="{DynamicResource CloseButton}" Command="{Binding CancelCampCommand}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="900,210,0,0" SoundID="UI_HUD_MakeCamp_Cancel" BoundEvent="ToggleInGameMenu"/>

            <StackPanel Orientation="Vertical" Margin="0,260,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="920">
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h54a9edbag9cf2g4f2egb188g1431d56c3159', Converter={StaticResource TranslatedStringConverter}}" FontSize="{DynamicResource MassiveFontSize}" Foreground="{DynamicResource LS_extraspecialTxtColor}" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap"/>
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hd87d1a54g859cg4384g97bag802a2071e49e', Converter={StaticResource TranslatedStringConverter}}" FontSize="{DynamicResource DefaultFontSize}" Foreground="{DynamicResource LS_baseTxtColor}" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap"/>
            </StackPanel>

                <!-- Background and holder for the camp supplies selection-->
            <Grid x:Name="RingHolder" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,540,0,0" Height="390">
                <Image Source="pack://application:,,,/Core;component/Assets/MakeCamp/campSupplies_barBg.png" Stretch="None" IsHitTestVisible="False"/>
                <Grid x:Name="Ring" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <Grid.RenderTransform>
                                    <TranslateTransform X="76" Y="196"/>
                                </Grid.RenderTransform>
                                <Path x:Name="RingPath" StrokeThickness="12" StrokeMiterLimit="4" Data="M0,-144.5a144.5,144.5,0,0,0,0,289a144.5,144.5,0,0,0,0,-289Z">
                                    <Path.Stroke>
                                        <LinearGradientBrush MappingMode="Absolute" StartPoint="0,200" EndPoint="0,199">
                                            <GradientStop Offset="0" Color="#FFFDDC93"/>
                                            <GradientStop Offset="0.18" Color="#FFFEDF98"/>
                                            <GradientStop Offset="0.36" Color="#FFFEE39C"/>
                                            <GradientStop Offset="0.43" Color="#FFFEE59E"/>
                                            <GradientStop Offset="0.5" Color="#FFFEE69F"/>
                                            <GradientStop Offset="0.75" Color="#7FFEEBA5"/>
                                            <GradientStop Offset="1" Color="#00FFF0AC"/>
                                        </LinearGradientBrush>
                                    </Path.Stroke>
                                </Path>
                            </Grid>

                            <Grid x:Name="RequiredPartySuppliesHolder" HorizontalAlignment="Center" VerticalAlignment="Top">
                    <Ellipse Height="100" Width="150" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FF282030" Offset="0"/>
                                            <GradientStop Color="#00282030" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                    <TextBlock FontSize="{DynamicResource HumongousFontSize}" Foreground="{DynamicResource LS_extraspecialTxtColor}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="600" TextAlignment="Center" Effect="{StaticResource HUD.TitleDropShadow}" >
                        <Run Text="{Binding SelectedSuppliesAmount}"/><Run Text="{Binding CurrentPlayer.RequiredPartySupplies, StringFormat='/{0}'}"/>
                    </TextBlock>
                </Grid>
                <Image Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,30">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/MakeCamp/campSupplies_barIcon_inactive.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Tag, ElementName=root}" Value="True">
                                    <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/MakeCamp/campSupplies_barIcon.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>

            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h3cef439fg92cdg4b5bgb3fdg5fd5db63d33a', Converter={StaticResource TranslatedStringConverter}}" FontSize="{DynamicResource DefaultFontSize}" Foreground="{DynamicResource LS_extraspecialTxtColor}"
                       HorizontalAlignment="Center" VerticalAlignment="Top" TextAlignment="Center" TextWrapping="Wrap" MaxWidth="344" Margin="0,912,0,0" Height="96"/>

            <ls:LSListBox x:Name="SuppliesView" ItemsSource="{Binding PartyCampSupplies.Slots}" ItemContainerStyle="{StaticResource ItemIconStyle}" HorizontalAlignment="Center" VerticalAlignment="Top"
                          Margin="60, 1020, 0, 0" Background="Transparent" BorderThickness="0" Height="560" SelectionMode="Multiple" Padding="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
                <ls:LSListBox.Template>
                    <ControlTemplate>
                        <ScrollViewer VerticalScrollBarVisibility="Visible" Padding="0,0,14,0" HorizontalAlignment="Right" Template="{DynamicResource ScrollViewerTemplate}" HorizontalScrollBarVisibility="Disabled">
                            <ScrollViewer.Resources>
                                <Style TargetType="ScrollBar" BasedOn="{StaticResource GoldScrollBar}"/>
                            </ScrollViewer.Resources>
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </ls:LSListBox.Template>
                <ls:LSListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ls:LSGrid x:Name="ContainerGrid" Columns="5" Rows="5" ContainerData="{Binding PartyCampSupplies}" Style="{StaticResource ContainerGridStyle}" DisableScrolling="False" AutoIndex="True">
                        </ls:LSGrid>
                    </ItemsPanelTemplate>
                </ls:LSListBox.ItemsPanel>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding OnItemSelectedCommand}" CommandParameter="{Binding ElementName=SuppliesView, Path=SelectedItems}"/>
                    </b:EventTrigger>

                    <b:PropertyChangedTrigger Binding="{Binding SelectedSuppliesAmount}">
                        <b:Interaction.Behaviors>
                            <b:ConditionBehavior>
                                <b:ConditionalExpression>
                                    <b:ComparisonCondition LeftOperand="{Binding PreviousSupplyPercentage}" Operator="NotEqual" RightOperand="{Binding NewSupplyPercentage}"/>
                                </b:ConditionalExpression>
                            </b:ConditionBehavior>
                        </b:Interaction.Behaviors>

                        <ls:LSPlaySound Sound="UI_HUD_CampSuppliesFill_Start"/>
                        <ls:LSControlStoryboard Storyboard="{StaticResource RingFillingAnim}" ControlStoryboardOption="Play" CompletedCommand="{Binding PlaySoundEvent}" CompletedCommandParameter="UI_HUD_CampSuppliesFill_Stop"/>
                    </b:PropertyChangedTrigger>
                </b:Interaction.Triggers>
            </ls:LSListBox>

            <Grid x:Name="AutoSelectHolder" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,380">
                <Image Source="pack://application:,,,/Core;component/Assets/MakeCamp/campSupplies_btnDecoration.png" Stretch="None" IsHitTestVisible="False"/>
                <ls:LSButton x:Name="AutoSelectBtn" Style="{DynamicResource BrownButtonStyle}" Command="{Binding AutoSelectCommand}" CommandParameter="{Binding ElementName=SuppliesView, Path=SelectedItems}"
                                 Content="{Binding Source='h520e6ffag14aag4d3aga15dg1ed8d9a0b852', Converter={StaticResource TranslatedStringConverter}}"
                                 HorizontalAlignment="Center" VerticalAlignment="Center"  SoundID="UI_HUD_LongRest_AutoSelect"/>
                        </Grid>

            <ls:LSButton x:Name="StartRestBtn" Command="{Binding ProcessRestCommand}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,220">
                <ls:LSButton.Style>
                    <Style BasedOn="{StaticResource BlueEdgeButtonStyle}" TargetType="ls:LSButton">
                        <Setter Property="Content" Value="{Binding Source='hba69db9cg5219g4c79gae4ege1a32ed2ed43', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Tag, ElementName=root}" Value="True">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Content" Value="{Binding Source='hba69db9cg5219g4c79gae4ege1a32ed2ed43', Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource LS_specialTxtColor}"/>
                                <Setter Property="SoundID" Value="UI_HUD_LongRest"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ls:LSButton.Style>
                <ls:LSButton.ToolTip>
                    <ls:LSTooltip ToolTipService.Placement="Top" Template="{StaticResource BaseTooltipTemplate}">
                        <TextBlock TextWrapping="Wrap">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hae826c89g4f7eg4a64g976fgf6cbebab7564', Converter={StaticResource TranslatedStringConverter}}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag, ElementName=root}" Value="True">
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0400598cg92a9g4a17g9b6agf2a78bb93ab3', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                    </ls:LSTooltip>
                </ls:LSButton.ToolTip>
            </ls:LSButton>
        </Grid>

    </Grid>

</ls:UIWidget>