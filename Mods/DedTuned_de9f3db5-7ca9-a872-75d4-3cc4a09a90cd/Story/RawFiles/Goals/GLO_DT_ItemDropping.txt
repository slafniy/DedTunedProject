Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_DT_IsPlayersInventoryItemStatus("DT_DROPPING_NOT_ALLOWED");
DB_DT_NoActionPointsStatus("DT_HAS_NO_ACTION_POINTS");
KBSECTION
//REGION  // Add DT_NoActionPointsDetectionPassive to each player
IF
LevelGameplayStarted(_, _)
AND
DB_Players(_Player)
AND
HasPassive(_Player, "DT_NoActionPointsDetectionPassive", 0)
THEN
AddPassive(_Player, "DT_NoActionPointsDetectionPassive");

IF
CharacterJoinedParty(_Player)
AND
HasPassive(_Player, "DT_NoActionPointsDetectionPassive", 0)
THEN
AddPassive(_Player, "DT_NoActionPointsDetectionPassive");
//END_REGION


// Handle item RMB->Drop and LMB->Drag
IF
PreMovedBy((ITEM)_Item, _Player)
AND
DB_DT_IsPlayersInventoryItemStatus(_Status)
AND
HasAppliedStatus(_Item, _Status, 1)
THEN
ToInventory(_Item, _Player, -1, 0, 0);  // Actually instantly teleports item back into inventory
Pickup(_Player, _Item, "", 1);  // Does nothing actually, needed just to get a record in combat log


// Handle if item was thrown - remove status from it
IF
OnThrown((ITEM)_Item, _, _, _, _, _, _)
AND
DB_DT_IsPlayersInventoryItemStatus(_Status)
AND
HasAppliedStatus(_Item, _Status, 1)
THEN
RemoveStatus(_Item, _Status, DT_ItemDropping_770195dd-1c87-4477-ac3e-a5c467f4b591);


// Handle DT_HAS_NO_ACTION_POINTS status to decide if we should mark/unmark inventory items
//REGION
IF
StatusApplied((CHARACTER)_Player, _Status, _, _)
AND
DB_Players(_Player)
AND
DB_DT_NoActionPointsStatus(_Status)
THEN
PROC_DT_MarkAllInventoryItems(_Player, 1);

IF
StatusRemoved((CHARACTER)_Player, _Status, _, _)
AND
DB_Players(_Player)
AND
DB_DT_NoActionPointsStatus(_Status)
THEN
PROC_DT_MarkAllInventoryItems(_Player, 0);
//END_REGION


// PROC_DT_MarkAllInventoryItems((CHARACTER)_Player)
// Mark "dropping not allowed" status for every non-equipped inventory item if ActionPoints == 0
// or unmark if ActionPoints > 0
//REGION
PROC
PROC_DT_MarkAllInventoryItems((CHARACTER)_Player, (INTEGER)_IsMark)
AND
_IsMark == 1
THEN
IterateInventory(_Player, "DT_MarkAllInventoryItems_ItemIteration", "DT_MarkAllInventoryItems_ItemIterationFinished");

PROC
PROC_DT_MarkAllInventoryItems((CHARACTER)_Player, (INTEGER)_IsMark)
AND
_IsMark == 0
THEN
IterateInventory(_Player, "DT_UnmarkAllInventoryItems_ItemIteration", "DT_UnmarkAllInventoryItems_ItemIterationFinished");

IF
EntityEvent((ITEM)_Item, "DT_MarkAllInventoryItems_ItemIteration")
AND
IsEquipped(_Item, 0)  // do not process what's equipped, we want to allow a free drop for such items
AND
DB_DT_IsPlayersInventoryItemStatus(_Status)
THEN
ApplyStatus(_Item, _Status, -1.0, 1, DT_ItemDropping_770195dd-1c87-4477-ac3e-a5c467f4b591);

IF
EntityEvent((ITEM)_Item, "DT_UnmarkAllInventoryItems_ItemIteration")
AND
DB_DT_IsPlayersInventoryItemStatus(_Status)
THEN
RemoveStatus(_Item, _Status, DT_ItemDropping_770195dd-1c87-4477-ac3e-a5c467f4b591);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
