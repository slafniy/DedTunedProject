## Apply Exhaustion mechanics for all possible player-controlled characters
#new entry "_Hero"
#type "Character"
#using "_Hero"
#data "Passives" "ShortResting;NonLethal;WeaponThrow;Perform;AttackOfOpportunity;DarknessRules;CombatStartAttack;EXHAUSTION_ADD_STACK_IN_COMBAT;EXHAUSTION_REMOVE_STACKS_ON_SHORT_REST"
#
#new entry "ORIGIN_Karlach"
#type "Character"
#using "ORIGIN_Karlach"
#data "Passives" "ShortResting;NonLethal;WeaponThrow;Perform;AttackOfOpportunity;DarknessRules;CombatStartAttack;ORI_Karlach_SweatImmune;EXHAUSTION_ADD_STACK_IN_COMBAT;EXHAUSTION_REMOVE_STACKS_ON_SHORT_REST"



# DEBUFF: shows current level of Exhaustion and applies debuffs on certain breakpoints
new entry "EXHAUSTION_DEBUFF_STACKS"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h34f7d8d7gc6b8g4fa2g81f5g7636c1a91f99;1"
data "Description" "h2c80a44eg9020g4d93gbdebg50abf17df167;1"
data "Icon" "Status_Exhaustion"
data "StackId" "EXHAUSTION_DEBUFF_STACKS"
data "StackType" "Additive"
data "StatusPropertyFlags" "FreezeDuration;MultiplyEffectsByDuration;ApplyToDead;DisableCombatlog;DisableOverhead"
data "TickType" "EndTurn"
data "TickFunctors" "IF(StatusDurationEqualOrMoreThan(SELF,'EXHAUSTION_DEBUFF_STACKS',15) and not HasStatus('EXHAUSTION_DEBUFF_LIGHT')):ApplyStatus(SELF,EXHAUSTION_DEBUFF_LIGHT,100,-1);IF(StatusDurationLessThan(SELF,'EXHAUSTION_DEBUFF_STACKS',15) and HasStatus('EXHAUSTION_DEBUFF_LIGHT')):RemoveStatus(SELF,EXHAUSTION_DEBUFF_LIGHT);IF(StatusDurationEqualOrMoreThan(SELF,'EXHAUSTION_DEBUFF_STACKS',25) and not HasStatus('EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP') and not HasStatus('EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP_RESISTANCE') and not HasStatus('SLEEPING')):ApplyStatus(SELF,EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP,100,1);IF(StatusDurationLessThan(SELF,'EXHAUSTION_DEBUFF_STACKS',25) and HasStatus('EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP')):RemoveStatus(SELF,EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP);IF(StatusDurationEqualOrMoreThan(SELF,'EXHAUSTION_DEBUFF_STACKS',40) and not HasStatus('EXHAUSTION_DEBUFF_DEATH')):ApplyStatus(SELF,EXHAUSTION_DEBUFF_DEATH,100,-1);IF(StatusDurationLessThan(SELF,'EXHAUSTION_DEBUFF_STACKS',40) and HasStatus('EXHAUSTION_DEBUFF_DEATH')):RemoveStatus(SELF,EXHAUSTION_DEBUFF_DEATH)"

# DEBUFF: Exhaustion level 1 - SLIGHT FATIGUE
# Light penalty on ability checks, attack rolls, spell DC and saving throws
new entry "EXHAUSTION_DEBUFF_LIGHT"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h3ba53e30g3696g4b88ga0fbg9384a90f24bd;1"
data "Description" "h2ca02a2eg8501g4bd1gb598ge5c396b52493;1"
data "DescriptionParams" "-2"
data "Icon" "Status_TiredEye"
data "StillAnimationType" "Weakened"
data "StillAnimationPriority" "Weakened"
data "Boosts" "RollBonus(Attack,-2);RollBonus(SavingThrow,-2);SpellSaveDC(-2);RollBonus(SkillCheck,-2);RollBonus(RawAbility,-2)"
data "StatusGroups" "SG_Condition"

# DEBUFF: Exhaustion level 2 - SLEEP
# If not passed CON save falls asleep
new entry "EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h366f465ag287ag4ffbgb155gb3e2eae42575;1"
data "Description" "h5a57a63cg3578g4cd0gb895g5b16a105eb23;1"
data "DescriptionParams" "15"
data "Icon" "Status_SleepDeprivation"
data "StillAnimationType" "Weakened"
data "StillAnimationPriority" "Weakened"
data "TickType" "EndTurn"
data "OnTickRoll" "not SavingThrow(Ability.Constitution, 15)"
data "OnTickSuccess" "ApplyStatus(SLEEPING,100,2)"
data "OnTickFail" "ApplyStatus(EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP_RESISTANCE,100,2)"
data "TooltipSave" "Constitution"

# DEBUFF: Exhaustion level 3 - DEATH, also set exhaustion stacks to level 2 to give a chance after resurrection
# Removes "DOWNED" first to be sure of instant death
new entry "EXHAUSTION_DEBUFF_DEATH"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h4568bcf8g51b7g42c3gb7a5g259d2b0d12f4;1"
data "Description" "h9a276103g3eb8g4a50g90aeg5828c7d4aad6;1"
data "Icon" "Status_Dying"
data "StillAnimationType" "Weakened"
data "StillAnimationPriority" "Weakened"
data "TickType" "EndTurn"
data "TickFunctors" "RemoveStatus(SELF,DOWNED);Kill();RemoveStatus(SELF,EXHAUSTION_DEBUFF_DEATH);SetStatusDuration(EXHAUSTION_DEBUFF_STACKS,30,ForceSet)"

# DEBUFF: Exhaustion sleep resistance
# If passed CON save - cannot fall asleep from EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP for 3 turns
new entry "EXHAUSTION_DEBUFF_UNCONTROLLABLE_SLEEP_RESISTANCE"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h81842d9eg5a97g4d31ga85aged127ace8dd3;1"
data "Description" "h7d01f311ge446g4f72g839age36ec4763782;1"
data "DescriptionParams" "3"
data "Icon" "Status_Positive"



## PASSIVE: Adds +1 stack of Exhaustion every time when character turn starts in combat
#new entry "EXHAUSTION_ADD_STACK_IN_COMBAT"
#type "PassiveData"
#data "Properties" "IsHidden"
#data "StatsFunctorContext" "OnTurn"
#data "Conditions" "Combat()"
#data "StatsFunctors" "ApplyStatus(SELF,EXHAUSTION_DEBUFF_STACKS,100,1)"
#
## PASSIVE: Removes N stacks of Exhaustion on Short Rest
#new entry "EXHAUSTION_REMOVE_STACKS_ON_SHORT_REST"
#type "PassiveData"
#data "Properties" "IsHidden"
#data "StatsFunctorContext" "OnShortRest"
#data "StatsFunctors" "IF(StatusDurationEqualOrMoreThan(SELF,'EXHAUSTION_DEBUFF_STACKS',10)):ApplyStatus(SELF,EXHAUSTION_DEBUFF_STACKS,100,-10);IF(StatusDurationLessThan(SELF,'EXHAUSTION_DEBUFF_STACKS',10)):SetStatusDuration(EXHAUSTION_DEBUFF_STACKS,0,ForceSet)"



# DEBUFF: Exhaustion - Bard rest once per day limiter
# Sets and removes in Osiris!
new entry "EXHAUSTION_SONG_OF_REST_LIMIT"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" ""
data "Description" ""
data "Icon" "Status_Positive"


# Bard's short rest should work once per day
#new entry "Shout_SongOfRest"
#type "SpellData"
#data "SpellType" "Shout"
#data "Cooldown" "OncePerRest"
#data "SpellProperties" "ShortRest()"
#data "TargetConditions" "Self()"
#data "Icon" "Action_Bard_SongOfRest"
#data "DisplayName" "h6664033bge8b7g48c8g8fc6g18986baa0bae;1"
#data "Description" "h004d056bga0c0g4211g864fgd0a167f0cf2d;4"
#data "TooltipDamageList" ""
#data "CastSound" "Spell_Cast_Bard_SongOfRest_L1to3"
#data "TargetSound" "Spell_Impact_Bard_SongOfRest_L1to3"
#data "CastTextEvent" "Cast"
#data "InstrumentComponentPrepareSound" "Instrument_Bard_SongOfRest_Prepare"
#data "InstrumentComponentLoopingSound" "Instrument_Bard_SongOfRest_Loop"
#data "InstrumentComponentCastSound" "Instrument_Bard_SongOfRest_Cast"
#data "InstrumentComponentImpactSound" "Instrument_Bard_SongOfRest_Impact"
#data "UseCosts" "ActionPoint:1"
#data "SpellAnimation" "850cd2f3-dde2-475d-b3a3-f35c47333523,,;,,;8bfc0edf-5baa-4344-a486-14032de5ab69,,;3935e00c-7d43-4243-a4ef-4c680530d593,,;ad775f69-0d9f-4215-bfc2-8e0ec7e32189,,;,,;6bfce8a0-80f1-47a8-97f4-34f4b8b6fe9e,,;,,;,,"
#data "VerbalIntent" "Healing"
#data "SpellStyleGroup" "Class"
#data "SpellFlags" "HasVerbalComponent"
#data "HitAnimationType" "MagicalNonDamage"
#data "RequirementConditions" "CanShortRest('NotEnoughResources')"
#data "RequirementEvents" "OnTurn;OnCombatEnded"
#data "PrepareEffect" "d2c9dc70-d8d8-40fc-87a8-3c14a3ea842a"
#data "CastEffect" "5e248293-1a8d-4557-a2e1-f399e4552ff0"
#data "HitEffect" "b4d2ce64-af72-45a2-8146-6a9c3b71f1a6"
#data "SpellSoundMagnitude" "Big"
#data "Sheathing" "Instrument"