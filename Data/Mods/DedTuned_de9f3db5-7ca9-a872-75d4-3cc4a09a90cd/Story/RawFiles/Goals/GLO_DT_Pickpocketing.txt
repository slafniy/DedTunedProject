Version 1
SubGoalCombiner SGC_AND
INITSECTION
// Store info about pickpockets this day, (CHARACTER)_Victim, (INTEGER)_TheftCount, (INTEGER)_Gold
NOT DB_DT_Pickpocketing_StolenCounter((CHARACTER)NULL_00000000-0000-0000-0000-000000000000, 0, 0);
KBSECTION
//REGION // Handle Pickpocket Started - apply aura to make range checks with it
IF
RequestPickpocket(_Thief, _Victim)
AND
DB_PartyMembers(_Thief)  // not sure if this triggers for non-party thieves somewhere
THEN
ApplyStatus(_Victim, "DT_PICKPOCKETING_VICTIM_AURA", -1.0, 1, _Victim);
//END_REGION


//REGION // Handle status DT_PICKPOCKETING_VICTIM_IS_NEAR - apply/remove SleightOfHand debuff if needed
IF
StatusApplied((CHARACTER)_Thief, "DT_PICKPOCKETING_VICTIM_IS_NEAR", (CHARACTER)_Victim, _StoryActionID)
AND
DB_PartyMembers(_Thief)
AND
DB_DT_Pickpocketing_StolenCounter(_Victim, _NumberOfItems, _)
AND
ConcatenateInteger("DT_Pickpocketing_ActionID_", _StoryActionID, _BoostID)
THEN
AddBoosts(_Thief, "Skill(SleightOfHand, -10)", _BoostID, (GUIDSTRING)NULL_00000000-0000-0000-0000-000000000000);

IF
StatusRemoved((CHARACTER)_Thief, "DT_PICKPOCKETING_VICTIM_IS_NEAR", _, _StoryActionID)
AND
ConcatenateInteger("DT_Pickpocketing_ActionID_", _StoryActionID, _BoostID)
THEN
RemoveBoosts(_Thief, "Skill(SleightOfHand, -10)", 1, _BoostID, (GUIDSTRING)NULL_00000000-0000-0000-0000-000000000000);
DebugText(_Thief, "should remove debuff here");
//END_REGION


//REGION // Handle Pickpocket Success
IF
CharacterPickpocketSuccess(_Thief, _Victim, _, _, _, _Gold)
AND
DB_PartyMembers(_Thief)  // not sure if this triggers for non-party thieves somewhere
THEN
PROC_DT_Pickpocketing_SuccessHandler(_Victim, _Gold);
//END_REGION


//REGION // PROC_DT_Pickpocketing_SuccessHandler 
PROC
PROC_DT_Pickpocketing_SuccessHandler((CHARACTER)_Victim, (INTEGER)_Gold)
AND
DB_DT_Pickpocketing_StolenCounter(_Victim, _TheftCountOld, _GoldOld)  // have record, increment counter
AND
IntegerSum(_TheftCountOld, 1, _TheftCountNew)
AND
IntegerSum(_GoldOld, _Gold, _GoldNew)
THEN
PROC_DT_Pickpocketing_StolenCounterReplace(_Victim, _TheftCountNew, _GoldNew);

PROC
PROC_DT_Pickpocketing_SuccessHandler((CHARACTER)_Victim, (INTEGER)_Gold)
AND
NOT DB_DT_Pickpocketing_StolenCounter(_Victim, _, _)  // have no records yet, add
THEN
DB_DT_Pickpocketing_StolenCounter(_Victim, 1, _Gold);
//END_REGION


//REGION  // replace values in db
PROC
PROC_DT_Pickpocketing_StolenCounterReplace((CHARACTER)_Victim, (INTEGER)_TheftCountNew, (INTEGER)_GoldNew)
AND
DB_DT_Pickpocketing_StolenCounter(_Victim, _TheftCountOld, _GoldOld)
THEN
NOT DB_DT_Pickpocketing_StolenCounter(_Victim, _TheftCountOld, _GoldOld);  // remove old

PROC
PROC_DT_Pickpocketing_StolenCounterReplace((CHARACTER)_Victim, (INTEGER)_TheftCountNew, (INTEGER)_GoldNew)
THEN
DB_DT_Pickpocketing_StolenCounter(_Victim, _TheftCountNew, _GoldNew);  // add new


// only for debugging, works on 2nd+ theft
PROC
PROC_DT_Pickpocketing_StolenCounterReplace((CHARACTER)_Victim, (INTEGER)_TheftCountNew, (INTEGER)_GoldNew)
AND
ConcatenateInteger("Stolen: ", _TheftCountNew, _msg1)
AND
Concatenate(_msg1, ", Gold: ", _msg2)
AND
ConcatenateInteger(_msg2, _GoldNew, _msg)
THEN
DebugText(_Victim, _msg);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
