Version 1
SubGoalCombiner SGC_AND
INITSECTION
// Store info about pickpockets this day, (CHARACTER)_Victim, (INTEGER)_TheftCount, (INTEGER)_Gold
NOT DB_DT_Pickpocketing_StolenCounter((CHARACTER)NULL_00000000-0000-0000-0000-000000000000, 0, 0);

// Character - Victim
NOT DB_DT_Pickpocketing_DefuffsTracker((CHARACTER)NULL_00000000-0000-0000-0000-000000000000, (CHARACTER)NULL_00000000-0000-0000-0000-000000000000);
KBSECTION
//REGION  // Add DT_MoveEventGeneratorPassive to each party member 
IF
DB_PartyMembers(_Character)
AND
HasPassive(_Character, "DT_MoveEventGeneratorPassive", 0)
THEN
AddPassive(_Character, "DT_MoveEventGeneratorPassive");
//END_REGION


//REGION  // Add DT_MoveEventGeneratorPassive to each Victim
IF
DB_DT_Pickpocketing_DefuffsTracker(_, _Victim)
AND
HasPassive(_Victim, "DT_MoveEventGeneratorPassive", 0)
THEN
AddPassive(_Victim, "DT_MoveEventGeneratorPassive");
//END_REGION


//REGION // >>> event StatusApplied - on DT_PICKPOCKETING_JUST_MOVED try refresh debuffs
IF
StatusApplied(_,"DT_PICKPOCKETING_JUST_MOVED",_,_)
THEN
PROC_DT_Pickpocketing_RefreshDebuffs();
//END_REGION


//REGION  // PROC_DT_Pickpocketing_RefreshDebuffs - check distance between victims and characters and call handler
PROC
PROC_DT_Pickpocketing_RefreshDebuffs()
AND
DB_PartyMembers(_Character)
AND
DB_DT_Pickpocketing_StolenCounter(_Victim, _, _)
AND
_Character != _Victim
AND
GetDistanceTo(_Character, _Victim, _Distance)
THEN
PROC_DT_PickpocketingHandleDistance(_Character, _Victim, _Distance);
//END_REGION

//REGION  // PROC_DT_PickpocketingHandleDistance - check distance threshold between character and victim and add/remove debuffs
PROC
PROC_DT_PickpocketingHandleDistance((CHARACTER)_Character, (CHARACTER)_Victim, (REAL)_Distance)
AND
_Distance < 3.0
AND
NOT DB_DT_Pickpocketing_DefuffsTracker(_Character, _Victim)
THEN
DebugText(_Victim, "thief is near, apply debuff!");
PROC_DT_Pickpocketing_AddDebuff(_Character, _Victim);

PROC
PROC_DT_PickpocketingHandleDistance((CHARACTER)_Character, (CHARACTER)_Victim, (REAL)_Distance)
AND
_Distance > 3.1
AND
DB_DT_Pickpocketing_DefuffsTracker(_Character, _Victim)
THEN
DebugText(_Victim, "thief is gone, remove debuff!");
PROC_DT_Pickpocketing_RemoveDebuff(_Character, _Victim);
//END_REGION


//REGION // >>> event RequestPickpocket - try refresh debuffs
IF
RequestPickpocket(_, _)
THEN
PROC_DT_Pickpocketing_RefreshDebuffs();
//END_REGION


//REGION  // PROC_DT_Pickpocketing_AddDebuff - apply debuff and store info about it in DB
PROC
PROC_DT_Pickpocketing_AddDebuff((CHARACTER)_Character, (CHARACTER)_Victim)
THEN
DB_DT_Pickpocketing_DefuffsTracker(_Character, _Victim);

PROC
PROC_DT_Pickpocketing_AddDebuff((CHARACTER)_Character, (CHARACTER)_Victim)
THEN
ApplyStatus(_Character, "DT_PICKPOCKETING_SLEIGHT_OF_HAND_DEBUFF_MINUS_ONE", -1.0, 1, _Victim);
//AddBoosts(_Thief, "Skill(SleightOfHand, -10)", _BoostID, _Victim);
//END_REGION


//REGION  // PROC_DT_Pickpocketing_RemoveDebuff - remove debuff and erase info about it from DB
PROC
PROC_DT_Pickpocketing_RemoveDebuff((CHARACTER)_Character, (CHARACTER)_Victim)
AND
HasAppliedStatus(_Character, "DT_PICKPOCKETING_SLEIGHT_OF_HAND_DEBUFF_MINUS_ONE", 1)
THEN
RemoveStatus(_Character, "DT_PICKPOCKETING_SLEIGHT_OF_HAND_DEBUFF_MINUS_ONE", _Victim);
//RemoveBoosts(_Thief, "Skill(SleightOfHand, -10)", 1, _BoostID, _Victim);

PROC
PROC_DT_Pickpocketing_RemoveDebuff((CHARACTER)_Character, (CHARACTER)_Victim)
THEN
NOT DB_DT_Pickpocketing_DefuffsTracker(_Character, _Victim);
//END_REGION


//REGION // >>> event CharacterPickpocketSuccess - call PROC_DT_Pickpocketing_SuccessHandler
IF
CharacterPickpocketSuccess(_Thief, _Victim, _, _, _, _Gold)
AND
DB_PartyMembers(_Thief)  // not sure if this triggers for non-party thieves somewhere
THEN
PROC_DT_Pickpocketing_SuccessHandler(_Victim, _Gold);
//END_REGION


//REGION // PROC_DT_Pickpocketing_SuccessHandler 
PROC
PROC_DT_Pickpocketing_SuccessHandler((CHARACTER)_Victim, (INTEGER)_Gold)
AND
DB_DT_Pickpocketing_StolenCounter(_Victim, _TheftCountOld, _GoldOld)  // have record, increment counter
AND
IntegerSum(_TheftCountOld, 1, _TheftCountNew)
AND
IntegerSum(_GoldOld, _Gold, _GoldNew)
THEN
PROC_DT_Pickpocketing_StolenCounterReplace(_Victim, _TheftCountNew, _GoldNew);

PROC
PROC_DT_Pickpocketing_SuccessHandler((CHARACTER)_Victim, (INTEGER)_Gold)
AND
NOT DB_DT_Pickpocketing_StolenCounter(_Victim, _, _)  // have no records yet, add
THEN
DB_DT_Pickpocketing_StolenCounter(_Victim, 1, _Gold);

PROC
PROC_DT_Pickpocketing_SuccessHandler((CHARACTER)_Victim, (INTEGER)_Gold)
THEN
PROC_DT_Pickpocketing_RefreshDebuffs();
//END_REGION


//REGION  // PROC_DT_Pickpocketing_StolenCounterReplace - replace values in db
PROC
PROC_DT_Pickpocketing_StolenCounterReplace((CHARACTER)_Victim, (INTEGER)_TheftCountNew, (INTEGER)_GoldNew)
AND
DB_DT_Pickpocketing_StolenCounter(_Victim, _TheftCountOld, _GoldOld)
THEN
NOT DB_DT_Pickpocketing_StolenCounter(_Victim, _TheftCountOld, _GoldOld);  // remove old

PROC
PROC_DT_Pickpocketing_StolenCounterReplace((CHARACTER)_Victim, (INTEGER)_TheftCountNew, (INTEGER)_GoldNew)
THEN
DB_DT_Pickpocketing_StolenCounter(_Victim, _TheftCountNew, _GoldNew);  // add new


// only for debugging, works on 2nd+ theft
PROC
PROC_DT_Pickpocketing_StolenCounterReplace((CHARACTER)_Victim, (INTEGER)_TheftCountNew, (INTEGER)_GoldNew)
AND
ConcatenateInteger("Stolen: ", _TheftCountNew, _msg1)
AND
Concatenate(_msg1, ", Gold: ", _msg2)
AND
ConcatenateInteger(_msg2, _GoldNew, _msg)
THEN
DebugText(_Victim, _msg);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
